---
title: "*Mapping the data landscape for developing and parameterizing Antarctic krill models* - **Supporting R-Code**"
title-block-style: default
title-block-banner: true
highlight-style: github
author: 
  - Dominik Bahlburg
  - Alexis Bahl
date: 08.02.2024
theme: default 
format:
  html:
    code-tools: true
    code-fold: true
    code-copy: true
    html-math-method: katex
    toc: true
    toc-title: On this page
    toc-location: left
editor: visual
execute:
  
  echo: true
  warning: false
  message: false
---

## Introduction

This document contains the workflow for selecting the papers that were reviewed in the systematic literature review as well as the R-Code used to produce the plots presented in the manuscript.

## Housekeeping

```{r}
# load relevant R-packages
library(tidyverse)
library(here)
library(vroom)
library(openxlsx)
```

## Systematic literature review

For the systematic literature review, we searched the Web of Science and Scopus using a pre-determined set of keywords, as described in the methods section of the manuscript. We used the following R code to remove duplicates from the returned lists of studies and to generate a preliminary list of candidate studies for the systematic literature review. This list was then manually reviewed by two people and each study was classified as relevant or not relevant for our purposes. This was done because many of the studies were from unrelated fields of research such as aquaculture research (e.g. testing the nutritional properties of krill meal), and therefore did not contain information we were looking for.

```{r}
# define function that combines the lists of studies from web of science and scopus, filters them using pre-defined keywords. 
readAndCleanQueryResults <- function(wosFilePaths, scopusFilePaths, fileSubsetKey,
                                     obligatoryKeywords =  c('euphausia superba|antarctic krill'), studyKeywords, topicKeyword){
  
  # read data from web of science
  wosData <- vroom(wosFilePaths[str_detect(wosFilePaths, fileSubsetKey)]) %>% 
    select(authors = AU, title = TI, journal = SO, abstract = AB, publishingDate = PD, publishingYear = PY, doi = DI)
  
  # read data from scopus
  scopusData <- vroom(scopusFilePaths[str_detect(scopusFilePaths, fileSubsetKey)]) %>% 
    select(authors = Authors, title = Title, journal = "Source title", abstract = Abstract, publishingYear = Year, doi = DOI)
  
  #Merge scopus and web of science results, set all text to lower case for easier handling
  combinedData <- wosData %>% 
    bind_rows(scopusData) %>% 
    mutate_all(tolower)
  
  #Filter the results by studyKeywords
  #In addition: remove duplicates that have been found in scopus and web of science
  combinedDataFiltered <- combinedData %>% 
    mutate(mustWordsIncluded = str_detect(title, pattern = obligatoryKeywords) + str_detect(abstract, pattern = obligatoryKeywords),
           canWordsIncluded = str_detect(title, pattern = studyKeywords) + str_detect(abstract, pattern = studyKeywords)) %>% 
    filter(mustWordsIncluded > 0 & canWordsIncluded > 0) %>% 
    distinct(title, .keep_all = T) %>% 
    mutate(topic = topicKeyword) 

  # return the clean and combined data
  return(combinedDataFiltered)
}

# create tibble that contains topic-specific keywords to subset file lists and studies
keyTib <- tibble(topicKeyword = c('autumn','development','overwintering','spawning'),
                 fileSubsetKey = c('Autumn|Fall|Lipid','Larvae|Embryo','Winter','Spawning'),
                 studyKeywords = c('fall|autumn|lipid','larva|egg|embryo|ontogen','winter|sea ice','spawning|fecundity|egg|vitellogenesis'))

# Define the fixed arguments
fixedArgs <- list(wosFilePaths <- list.files(here('queryResults'),'wos', full.names = T), 
                   scopusFilePaths <- list.files(here('queryResults'),'scopus', full.names = T),
                   obligatoryKeywords =  c('euphausia superba|antarctic krill'))

# Use pmap_dfr to apply the function to each row of keyTib, then remove duplicates
results <- pmap_dfr(keyTib, function(topicKeyword, fileSubsetKey, studyKeywords) {
  # Combine fixed and varying arguments
  args <- c(fixedArgs, list(topicKeyword = topicKeyword, fileSubsetKey = fileSubsetKey, studyKeywords = studyKeywords))
  # Call the function with the combined arguments
  do.call(readAndCleanQueryResults, args)}) %>% 
  distinct(title, .keep_all = T) %>% 
  arrange(topic, -mustWordsIncluded, -canWordsIncluded)

# write dataframe to file. This list of studies was further filtered based on a relevance assessment conducted by 2 persons.
write.xlsx(results, here('selectedPapers','paper1LiteraturePreliminary.xlsx'))
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
